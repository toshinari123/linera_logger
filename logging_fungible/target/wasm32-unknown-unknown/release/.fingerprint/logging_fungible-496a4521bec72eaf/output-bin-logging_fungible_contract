{"message":"expected one of `.`, `;`, `?`, `else`, or an operator, found keyword `self`","code":null,"level":"error","spans":[{"file_name":"src/contract.rs","byte_start":985,"byte_end":1017,"line_start":35,"line_end":35,"column_start":5,"column_end":37,"is_primary":true,"text":[{"text":"    #[initialize(Self::logger_id())]","highlight_start":5,"highlight_end":37}],"label":"expected one of `.`, `;`, `?`, `else`, or an operator","suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"src/contract.rs","byte_start":985,"byte_end":1017,"line_start":35,"line_end":35,"column_start":5,"column_end":37,"is_primary":false,"text":[{"text":"    #[initialize(Self::logger_id())]","highlight_start":5,"highlight_end":37}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"#[initialize]","def_site_span":{"file_name":"/mnt/d/PROJECTS/blockchain/linera_logger/logger_macro/src/lib.rs","byte_start":92,"byte_end":163,"line_start":6,"line_end":6,"column_start":1,"column_end":72,"is_primary":false,"text":[{"text":"pub fn initialize(input: TokenStream, anno: TokenStream) -> TokenStream {","highlight_start":1,"highlight_end":72}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror\u001b[0m\u001b[0m\u001b[1m: expected one of `.`, `;`, `?`, `else`, or an operator, found keyword `self`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/contract.rs:35:5\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m35\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    #[initialize(Self::logger_id())]\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mexpected one of `.`, `;`, `?`, `else`, or an operator\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this error originates in the attribute macro `initialize` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}
{"message":"failed to resolve: use of undeclared crate or module `linera_sdl`","code":{"code":"E0433","explanation":"An undeclared crate, module, or type was used.\n\nErroneous code example:\n\n```compile_fail,E0433\nlet map = HashMap::new();\n// error: failed to resolve: use of undeclared type `HashMap`\n```\n\nPlease verify you didn't misspell the type/module's name or that you didn't\nforget to import it:\n\n```\nuse std::collections::HashMap; // HashMap has been imported.\nlet map: HashMap<u32, u32> = HashMap::new(); // So it can be used!\n```\n\nIf you've expected to use a crate name:\n\n```compile_fail\nuse ferris_wheel::BigO;\n// error: failed to resolve: use of undeclared crate or module `ferris_wheel`\n```\n\nMake sure the crate has been added as a dependency in `Cargo.toml`.\n\nTo use a module from your current crate, add the `crate::` prefix to the path.\n"},"level":"error","spans":[{"file_name":"src/contract.rs","byte_start":985,"byte_end":1017,"line_start":35,"line_end":35,"column_start":5,"column_end":37,"is_primary":true,"text":[{"text":"    #[initialize(Self::logger_id())]","highlight_start":5,"highlight_end":37}],"label":"use of undeclared crate or module `linera_sdl`","suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"src/contract.rs","byte_start":985,"byte_end":1017,"line_start":35,"line_end":35,"column_start":5,"column_end":37,"is_primary":false,"text":[{"text":"    #[initialize(Self::logger_id())]","highlight_start":5,"highlight_end":37}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"#[initialize]","def_site_span":{"file_name":"/mnt/d/PROJECTS/blockchain/linera_logger/logger_macro/src/lib.rs","byte_start":92,"byte_end":163,"line_start":6,"line_end":6,"column_start":1,"column_end":72,"is_primary":false,"text":[{"text":"pub fn initialize(input: TokenStream, anno: TokenStream) -> TokenStream {","highlight_start":1,"highlight_end":72}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"there is a crate or module with a similar name","code":null,"level":"help","spans":[{"file_name":"src/contract.rs","byte_start":985,"byte_end":1017,"line_start":35,"line_end":35,"column_start":5,"column_end":37,"is_primary":true,"text":[{"text":"    #[initialize(Self::logger_id())]","highlight_start":5,"highlight_end":37}],"label":null,"suggested_replacement":"linera_sdk","suggestion_applicability":"MaybeIncorrect","expansion":{"span":{"file_name":"src/contract.rs","byte_start":985,"byte_end":1017,"line_start":35,"line_end":35,"column_start":5,"column_end":37,"is_primary":false,"text":[{"text":"    #[initialize(Self::logger_id())]","highlight_start":5,"highlight_end":37}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"#[initialize]","def_site_span":{"file_name":"/mnt/d/PROJECTS/blockchain/linera_logger/logger_macro/src/lib.rs","byte_start":92,"byte_end":163,"line_start":6,"line_end":6,"column_start":1,"column_end":72,"is_primary":false,"text":[{"text":"pub fn initialize(input: TokenStream, anno: TokenStream) -> TokenStream {","highlight_start":1,"highlight_end":72}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0433]\u001b[0m\u001b[0m\u001b[1m: failed to resolve: use of undeclared crate or module `linera_sdl`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/contract.rs:35:5\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m35\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    #[initialize(Self::logger_id())]\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9muse of undeclared crate or module `linera_sdl`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this error originates in the attribute macro `initialize` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: there is a crate or module with a similar name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m35\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[38;5;10mlinera_sdk\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\n"}
{"message":"unused import: `from_utf8`","code":{"code":"unused_imports","explanation":null},"level":"warning","spans":[{"file_name":"src/contract.rs","byte_start":607,"byte_end":616,"line_start":19,"line_end":19,"column_start":25,"column_end":34,"is_primary":true,"text":[{"text":"use std::str::{FromStr, from_utf8, Utf8Error};","highlight_start":25,"highlight_end":34}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"`#[warn(unused_imports)]` on by default","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"remove the unused import","code":null,"level":"help","spans":[{"file_name":"src/contract.rs","byte_start":605,"byte_end":616,"line_start":19,"line_end":19,"column_start":23,"column_end":34,"is_primary":true,"text":[{"text":"use std::str::{FromStr, from_utf8, Utf8Error};","highlight_start":23,"highlight_end":34}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused import: `from_utf8`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/contract.rs:19:25\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m19\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0muse std::str::{FromStr, from_utf8, Utf8Error};\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                        \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: `#[warn(unused_imports)]` on by default\u001b[0m\n\n"}
{"message":"unused import: `info`","code":{"code":"unused_imports","explanation":null},"level":"warning","spans":[{"file_name":"src/contract.rs","byte_start":662,"byte_end":666,"line_start":21,"line_end":21,"column_start":11,"column_end":15,"is_primary":true,"text":[{"text":"use log::{info};","highlight_start":11,"highlight_end":15}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"remove the whole `use` item","code":null,"level":"help","spans":[{"file_name":"src/contract.rs","byte_start":652,"byte_end":668,"line_start":21,"line_end":21,"column_start":1,"column_end":17,"is_primary":true,"text":[{"text":"use log::{info};","highlight_start":1,"highlight_end":17}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused import: `info`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/contract.rs:21:11\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m21\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0muse log::{info};\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m          \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^\u001b[0m\n\n"}
{"message":"failed to resolve: use of undeclared crate or module `find_crate`","code":{"code":"E0433","explanation":"An undeclared crate, module, or type was used.\n\nErroneous code example:\n\n```compile_fail,E0433\nlet map = HashMap::new();\n// error: failed to resolve: use of undeclared type `HashMap`\n```\n\nPlease verify you didn't misspell the type/module's name or that you didn't\nforget to import it:\n\n```\nuse std::collections::HashMap; // HashMap has been imported.\nlet map: HashMap<u32, u32> = HashMap::new(); // So it can be used!\n```\n\nIf you've expected to use a crate name:\n\n```compile_fail\nuse ferris_wheel::BigO;\n// error: failed to resolve: use of undeclared crate or module `ferris_wheel`\n```\n\nMake sure the crate has been added as a dependency in `Cargo.toml`.\n\nTo use a module from your current crate, add the `crate::` prefix to the path.\n"},"level":"error","spans":[{"file_name":"src/contract.rs","byte_start":985,"byte_end":1017,"line_start":35,"line_end":35,"column_start":5,"column_end":37,"is_primary":true,"text":[{"text":"    #[initialize(Self::logger_id())]","highlight_start":5,"highlight_end":37}],"label":"use of undeclared crate or module `find_crate`","suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"src/contract.rs","byte_start":985,"byte_end":1017,"line_start":35,"line_end":35,"column_start":5,"column_end":37,"is_primary":false,"text":[{"text":"    #[initialize(Self::logger_id())]","highlight_start":5,"highlight_end":37}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"#[initialize]","def_site_span":{"file_name":"/mnt/d/PROJECTS/blockchain/linera_logger/logger_macro/src/lib.rs","byte_start":92,"byte_end":163,"line_start":6,"line_end":6,"column_start":1,"column_end":72,"is_primary":false,"text":[{"text":"pub fn initialize(input: TokenStream, anno: TokenStream) -> TokenStream {","highlight_start":1,"highlight_end":72}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0433]\u001b[0m\u001b[0m\u001b[1m: failed to resolve: use of undeclared crate or module `find_crate`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/contract.rs:35:5\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m35\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    #[initialize(Self::logger_id())]\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9muse of undeclared crate or module `find_crate`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this error originates in the attribute macro `initialize` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}
{"message":"mismatched types","code":{"code":"E0308","explanation":"Expected type did not match the received type.\n\nErroneous code examples:\n\n```compile_fail,E0308\nfn plus_one(x: i32) -> i32 {\n    x + 1\n}\n\nplus_one(\"Not a number\");\n//       ^^^^^^^^^^^^^^ expected `i32`, found `&str`\n\nif \"Not a bool\" {\n// ^^^^^^^^^^^^ expected `bool`, found `&str`\n}\n\nlet x: f32 = \"Not a float\";\n//     ---   ^^^^^^^^^^^^^ expected `f32`, found `&str`\n//     |\n//     expected due to this\n```\n\nThis error occurs when an expression was used in a place where the compiler\nexpected an expression of a different type. It can occur in several cases, the\nmost common being when calling a function and passing an argument which has a\ndifferent type than the matching type in the function declaration.\n"},"level":"error","spans":[{"file_name":"src/contract.rs","byte_start":985,"byte_end":1017,"line_start":35,"line_end":35,"column_start":5,"column_end":37,"is_primary":true,"text":[{"text":"    #[initialize(Self::logger_id())]","highlight_start":5,"highlight_end":37}],"label":"expected `&_`, found integer","suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"src/contract.rs","byte_start":985,"byte_end":1017,"line_start":35,"line_end":35,"column_start":5,"column_end":37,"is_primary":false,"text":[{"text":"    #[initialize(Self::logger_id())]","highlight_start":5,"highlight_end":37}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"#[initialize]","def_site_span":{"file_name":"/mnt/d/PROJECTS/blockchain/linera_logger/logger_macro/src/lib.rs","byte_start":92,"byte_end":163,"line_start":6,"line_end":6,"column_start":1,"column_end":72,"is_primary":false,"text":[{"text":"pub fn initialize(input: TokenStream, anno: TokenStream) -> TokenStream {","highlight_start":1,"highlight_end":72}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},{"file_name":"src/contract.rs","byte_start":985,"byte_end":1017,"line_start":35,"line_end":35,"column_start":5,"column_end":37,"is_primary":true,"text":[{"text":"    #[initialize(Self::logger_id())]","highlight_start":5,"highlight_end":37}],"label":"arguments to this function are incorrect","suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"src/contract.rs","byte_start":985,"byte_end":1017,"line_start":35,"line_end":35,"column_start":5,"column_end":37,"is_primary":false,"text":[{"text":"    #[initialize(Self::logger_id())]","highlight_start":5,"highlight_end":37}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"#[initialize]","def_site_span":{"file_name":"/mnt/d/PROJECTS/blockchain/linera_logger/logger_macro/src/lib.rs","byte_start":92,"byte_end":163,"line_start":6,"line_end":6,"column_start":1,"column_end":72,"is_primary":false,"text":[{"text":"pub fn initialize(input: TokenStream, anno: TokenStream) -> TokenStream {","highlight_start":1,"highlight_end":72}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"expected reference `&_`\n        found type `{integer}`","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"associated function defined here","code":null,"level":"note","spans":[{"file_name":"/root/.cargo/registry/src/index.crates.io-6f17d22bba15001f/linera-base-0.2.0/src/crypto.rs","byte_start":12212,"byte_end":12215,"line_start":389,"line_end":389,"column_start":12,"column_end":15,"is_primary":true,"text":[{"text":"    pub fn new<T: ?Sized>(value: &T) -> Self","highlight_start":12,"highlight_end":15}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0308]\u001b[0m\u001b[0m\u001b[1m: mismatched types\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/contract.rs:35:5\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m35\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    #[initialize(Self::logger_id())]\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mexpected `&_`, found integer\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9marguments to this function are incorrect\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: expected reference `\u001b[0m\u001b[0m\u001b[1m&_\u001b[0m\u001b[0m`\u001b[0m\n\u001b[0m                    found type `\u001b[0m\u001b[0m\u001b[1m{integer}\u001b[0m\u001b[0m`\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: associated function defined here\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/root/.cargo/registry/src/index.crates.io-6f17d22bba15001f/linera-base-0.2.0/src/crypto.rs:389:12\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m389\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    pub fn new<T: ?Sized>(value: &T) -> Self\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this error originates in the attribute macro `initialize` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}
{"message":"mismatched types","code":{"code":"E0308","explanation":"Expected type did not match the received type.\n\nErroneous code examples:\n\n```compile_fail,E0308\nfn plus_one(x: i32) -> i32 {\n    x + 1\n}\n\nplus_one(\"Not a number\");\n//       ^^^^^^^^^^^^^^ expected `i32`, found `&str`\n\nif \"Not a bool\" {\n// ^^^^^^^^^^^^ expected `bool`, found `&str`\n}\n\nlet x: f32 = \"Not a float\";\n//     ---   ^^^^^^^^^^^^^ expected `f32`, found `&str`\n//     |\n//     expected due to this\n```\n\nThis error occurs when an expression was used in a place where the compiler\nexpected an expression of a different type. It can occur in several cases, the\nmost common being when calling a function and passing an argument which has a\ndifferent type than the matching type in the function declaration.\n"},"level":"error","spans":[{"file_name":"src/contract.rs","byte_start":985,"byte_end":1017,"line_start":35,"line_end":35,"column_start":5,"column_end":37,"is_primary":true,"text":[{"text":"    #[initialize(Self::logger_id())]","highlight_start":5,"highlight_end":37}],"label":"expected `ApplicationId<_>`, found `Result<ApplicationId<LoggerAbi>, Error>`","suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"src/contract.rs","byte_start":985,"byte_end":1017,"line_start":35,"line_end":35,"column_start":5,"column_end":37,"is_primary":false,"text":[{"text":"    #[initialize(Self::logger_id())]","highlight_start":5,"highlight_end":37}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"#[initialize]","def_site_span":{"file_name":"/mnt/d/PROJECTS/blockchain/linera_logger/logger_macro/src/lib.rs","byte_start":92,"byte_end":163,"line_start":6,"line_end":6,"column_start":1,"column_end":72,"is_primary":false,"text":[{"text":"pub fn initialize(input: TokenStream, anno: TokenStream) -> TokenStream {","highlight_start":1,"highlight_end":72}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},{"file_name":"src/contract.rs","byte_start":985,"byte_end":1017,"line_start":35,"line_end":35,"column_start":5,"column_end":37,"is_primary":true,"text":[{"text":"    #[initialize(Self::logger_id())]","highlight_start":5,"highlight_end":37}],"label":"arguments to this method are incorrect","suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"src/contract.rs","byte_start":985,"byte_end":1017,"line_start":35,"line_end":35,"column_start":5,"column_end":37,"is_primary":false,"text":[{"text":"    #[initialize(Self::logger_id())]","highlight_start":5,"highlight_end":37}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"#[initialize]","def_site_span":{"file_name":"/mnt/d/PROJECTS/blockchain/linera_logger/logger_macro/src/lib.rs","byte_start":92,"byte_end":163,"line_start":6,"line_end":6,"column_start":1,"column_end":72,"is_primary":false,"text":[{"text":"pub fn initialize(input: TokenStream, anno: TokenStream) -> TokenStream {","highlight_start":1,"highlight_end":72}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"expected struct `linera_sdk::base::ApplicationId<_>`\n     found enum `Result<linera_sdk::base::ApplicationId<LoggerAbi>, Error>`","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"method defined here","code":null,"level":"note","spans":[{"file_name":"/root/.cargo/registry/src/index.crates.io-6f17d22bba15001f/linera-sdk-0.2.0/src/lib.rs","byte_start":10862,"byte_end":10878,"line_start":223,"line_end":223,"column_start":14,"column_end":30,"is_primary":true,"text":[{"text":"    async fn call_application<A: ContractAbi + Send>(","highlight_start":14,"highlight_end":30}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0308]\u001b[0m\u001b[0m\u001b[1m: mismatched types\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/contract.rs:35:5\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m35\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    #[initialize(Self::logger_id())]\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mexpected `ApplicationId<_>`, found `Result<ApplicationId<LoggerAbi>, Error>`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9marguments to this method are incorrect\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: expected struct `linera_sdk::base::ApplicationId<\u001b[0m\u001b[0m\u001b[1m_\u001b[0m\u001b[0m>`\u001b[0m\n\u001b[0m                 found enum `\u001b[0m\u001b[0m\u001b[1mResult<\u001b[0m\u001b[0mlinera_sdk::base::ApplicationId<\u001b[0m\u001b[0m\u001b[1mLoggerAbi\u001b[0m\u001b[0m>, \u001b[0m\u001b[0m\u001b[1mError>\u001b[0m\u001b[0m`\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: method defined here\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/root/.cargo/registry/src/index.crates.io-6f17d22bba15001f/linera-sdk-0.2.0/src/lib.rs:223:14\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m223\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    async fn call_application<A: ContractAbi + Send>(\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m             \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this error originates in the attribute macro `initialize` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}
{"message":"aborting due to 5 previous errors; 2 warnings emitted","code":null,"level":"error","spans":[],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror\u001b[0m\u001b[0m\u001b[1m: aborting due to 5 previous errors; 2 warnings emitted\u001b[0m\n\n"}
{"message":"Some errors have detailed explanations: E0308, E0433.","code":null,"level":"failure-note","spans":[],"children":[],"rendered":"\u001b[0m\u001b[1mSome errors have detailed explanations: E0308, E0433.\u001b[0m\n"}
{"message":"For more information about an error, try `rustc --explain E0308`.","code":null,"level":"failure-note","spans":[],"children":[],"rendered":"\u001b[0m\u001b[1mFor more information about an error, try `rustc --explain E0308`.\u001b[0m\n"}
